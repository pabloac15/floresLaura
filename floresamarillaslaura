<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Ramo de flores para ti</title>
  <style>
    html,body{margin:0;height:100%;display:flex;align-items:center;justify-content:center;background:linear-gradient(180deg,#041021 0%, #07122a 100%);font-family:system-ui, sans-serif;color:#fff}
    .card{background:rgba(255,255,255,0.03);padding:20px;border-radius:16px;box-shadow:0 8px 30px rgba(0,0,0,0.5);text-align:center;max-width:95vw}
    h1{margin:0 0 10px;font-size:22px}
    button{background:#ffd54a;color:#000;border:none;padding:12px 20px;border-radius:12px;font-weight:bold;font-size:16px;cursor:pointer;box-shadow:0 4px 20px rgba(255,213,74,0.3);transition:transform .2s}
    button:hover{transform:scale(1.05)}
    canvas{display:block;margin:20px auto 0;max-width:100%;border-radius:10px;background:transparent}
  </style>
</head>
<body>
  <div class="card">
    <h1>Un ramo de flores amarillas para ti 💛</h1>
    <button id="startBtn">Generar ramo</button>
    <canvas id="canvas" width="900" height="600"></canvas>
  </div>

  <script>
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');

    function fixHighDPI(){
      const dpr = Math.max(1, window.devicePixelRatio||1);
      canvas.width = 900*dpr; canvas.height = 600*dpr;
      ctx.setTransform(dpr,0,0,dpr,0,0);
    }
    fixHighDPI();

    function drawPerson(x,y,isMale,name){
      ctx.save();
      ctx.translate(x,y);
      ctx.fillStyle='#ffcc80';
      ctx.beginPath();
      ctx.arc(0,-40,20,0,Math.PI*2);
      ctx.fill();
      ctx.fillStyle=isMale?'#2196f3':'#e91e63';
      ctx.fillRect(-10,-20,20,40);
      ctx.fillStyle=isMale?'#1565c0':'#ad1457';
      ctx.fillRect(-10,20,8,25);
      ctx.fillRect(2,20,8,25);
      ctx.fillRect(-25,-20,15,8);
      ctx.fillRect(10,-20,15,8);
      ctx.fillStyle='#fff';
      ctx.font='bold 14px sans-serif';
      ctx.textAlign='center';
      ctx.fillText(name,0,60);
      ctx.restore();
    }

    function drawDog(x, y, scale, name){
      ctx.save();
      ctx.translate(x, y);
      ctx.scale(scale/20, scale/20);
      ctx.fillStyle='#fff';
      ctx.beginPath(); ctx.ellipse(0,0,30,20,0,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(-35,-10,15,0,Math.PI*2); ctx.fill();
      ctx.fillStyle='#000';
      ctx.beginPath(); ctx.ellipse(-45,-20,5,10,0,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.ellipse(-25,-20,5,10,0,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(-38,-12,3,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(-32,-12,3,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(-35,-5,3,0,Math.PI*2); ctx.fill();
      ctx.fillStyle='#fff'; ctx.font='bold 18px sans-serif'; ctx.textAlign='center'; ctx.fillText(name,0,35);
      ctx.restore();
    }

    function drawCat(x, y, scale, color, name){
      ctx.save();
      ctx.translate(x, y);
      ctx.scale(scale/20, scale/20);
      ctx.fillStyle=color;
      ctx.beginPath(); ctx.ellipse(0,0,25,15,0,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(0,-15,12,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.moveTo(-8,-25); ctx.lineTo(-12,-35); ctx.lineTo(-4,-25); ctx.fill();
      ctx.beginPath(); ctx.moveTo(8,-25); ctx.lineTo(12,-35); ctx.lineTo(4,-25); ctx.fill();
      ctx.fillStyle='#000'; ctx.beginPath(); ctx.arc(-4,-15,2,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(4,-15,2,0,Math.PI*2); ctx.fill();
      ctx.beginPath(); ctx.arc(0,-10,2,0,Math.PI*2); ctx.fill();
      ctx.fillStyle='#fff'; ctx.font='bold 18px sans-serif'; ctx.textAlign='center'; ctx.fillText(name,0,30);
      ctx.restore();
    }

    function drawFlower(x,y,size){
      ctx.save(); ctx.translate(x,y); ctx.rotate((Math.random()-0.5)*0.2);
      for(let i=0;i<6;i++){ ctx.rotate(Math.PI/3); const grad=ctx.createRadialGradient(size,0,0,size,0,size*1.2);
        grad.addColorStop(0,'#fff59d'); grad.addColorStop(1,'#fbc02d'); ctx.fillStyle=grad; ctx.beginPath(); ctx.ellipse(size,0,size*0.9,size*1.3,0,0,Math.PI*2); ctx.fill(); }
      const centerGrad=ctx.createRadialGradient(0,0,0,0,0,size*0.8);
      centerGrad.addColorStop(0,'#8d6e63'); centerGrad.addColorStop(1,'#4e342e'); ctx.fillStyle=centerGrad;
      ctx.beginPath(); ctx.arc(0,0,size*0.7,0,Math.PI*2); ctx.fill(); ctx.restore();
    }

    function drawStem(x,y,cx,cy){ ctx.strokeStyle='rgba(40,110,40,0.9)'; ctx.lineWidth=3;
      ctx.beginPath(); const midX=x+(cx-x)*0.5; const midY=y+(cy-y)*0.5; ctx.moveTo(x,y); ctx.quadraticCurveTo(midX,midY,cx,cy); ctx.stroke(); }

    function drawHearts(){
      const w = canvas.width/(window.devicePixelRatio||1);
      const h = canvas.height/(window.devicePixelRatio||1);
      const hearts = [];
      const personAreas = [ {x: w*0.25-50, y: h*0.2-50, width:100, height:80}, {x: w*0.75-50, y: h*0.2-50, width:100, height:80} ];
      for(let i=0;i<50;i++){ const area = personAreas[i%2]; hearts.push({ x: area.x + Math.random()*area.width, y: area.y + Math.random()*area.height, size: 15 + Math.random()*20, alpha: Math.random()*0.5 + 0.5 }); }
      let flashes = 0;
      const interval = setInterval(()=>{
        ctx.clearRect(0,0,w,h*0.3);
        hearts.forEach(hc=>{ ctx.save(); ctx.globalAlpha = hc.alpha * (flashes % 2 ? 1 : 0.5); ctx.fillStyle = 'red'; ctx.font = `${hc.size}px serif`; ctx.fillText('❤', hc.x, hc.y); ctx.restore(); });
        flashes++; if(flashes>12) clearInterval(interval);
      },300);
    }

    function generateBouquet(){
      ctx.clearRect(0,0,canvas.width,canvas.height);
      const w=canvas.width/(window.devicePixelRatio||1);
      const h=canvas.height/(window.devicePixelRatio||1);
      drawPerson(w*0.25,h*0.7,true,'Pablo');
      drawPerson(w*0.75,h*0.7,false,'Laura');
      drawDog(w*0.15,h*0.85,20,'Zar');
      drawCat(w*0.35,h*0.85,18,'#fff','Paco');
      drawCat(w*0.65,h*0.85,18,'#d2b48c','Gala');
      drawCat(w*0.85,h*0.85,18,'#ff9933','Bimba');
      const cx=w/2, cy=h*0.55; const rows=5, cols=6; const spacingX=60, spacingY=55; const positions=[];
      for(let r=0;r<rows;r++){ const flowersInRow = cols - Math.floor(r/1.5); const rowStartX = cx - (flowersInRow-1)*spacingX/2;
        for(let c=0;c<flowersInRow;c++){ positions.push({x:rowStartX + c*spacingX,y:cy + (r-2)*spacingY}); } }
      let i=0;
      function drawNextFlower(){ if(i>=positions.length){drawBow(); drawHearts(); return;} const p=positions[i]; drawStem(p.x,p.y,cx,h*0.9); drawFlower(p.x,p.y,14); i++; setTimeout(drawNextFlower,200); }
      function drawBow(){ ctx.save(); ctx.translate(cx,h*0.9); ctx.fillStyle='#b33a6a'; ctx.beginPath(); ctx.roundRect(-70,-15,140,30,10); ctx.fill(); ctx.fillStyle='#ff6fa3'; for(let side of [-1,1]){ ctx.beginPath(); ctx.moveTo(side*10,-15); ctx.quadraticCurveTo(side*60,-60,side*15,-40); ctx.quadraticCurveTo(side*5,-30,side*10,-15); ctx.fill(); } ctx.restore(); }
      drawNextFlower();
    }

    document.getElementById('startBtn').addEventListener('click', generateBouquet);
  </script>
</body>
</html>
